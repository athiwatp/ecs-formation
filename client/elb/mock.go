// Automatically generated by MockGen. DO NOT EDIT!
// Source: client/elb/client.go

package elb

import (
	elb "github.com/aws/aws-sdk-go/service/elb"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *_MockClientRecorder
}

// Recorder for MockClient (not exported)
type _MockClientRecorder struct {
	mock *MockClient
}

func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &_MockClientRecorder{mock}
	return mock
}

func (_m *MockClient) EXPECT() *_MockClientRecorder {
	return _m.recorder
}

func (_m *MockClient) DescribeLoadBalancers(names []string) (*elb.DescribeLoadBalancersOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeLoadBalancers", names)
	ret0, _ := ret[0].(*elb.DescribeLoadBalancersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockClientRecorder) DescribeLoadBalancers(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLoadBalancers", arg0)
}

func (_m *MockClient) RegisterInstancesWithLoadBalancer(name string, instances []*elb.Instance) ([]*elb.Instance, error) {
	ret := _m.ctrl.Call(_m, "RegisterInstancesWithLoadBalancer", name, instances)
	ret0, _ := ret[0].([]*elb.Instance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockClientRecorder) RegisterInstancesWithLoadBalancer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RegisterInstancesWithLoadBalancer", arg0, arg1)
}

func (_m *MockClient) DeregisterInstancesFromLoadBalancer(lb string, instances []*elb.Instance) ([]*elb.Instance, error) {
	ret := _m.ctrl.Call(_m, "DeregisterInstancesFromLoadBalancer", lb, instances)
	ret0, _ := ret[0].([]*elb.Instance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockClientRecorder) DeregisterInstancesFromLoadBalancer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeregisterInstancesFromLoadBalancer", arg0, arg1)
}
